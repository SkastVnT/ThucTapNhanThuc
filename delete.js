document.addEventListener("DOMContentLoaded", function () {
    const deleteSelect = document.getElementById("delete-select");
    const deleteBtn = document.getElementById("delete-btn");

    // H√†m t·∫£i danh s√°ch d·ªØ li·ªáu d·ª±a tr√™n tham s·ªë "date" tr√™n URL
    async function loadChecklistData() {
        try {
            const urlParams = new URLSearchParams(window.location.search);
            // L·∫•y "datetime" ho·∫∑c "date", sau ƒë√≥ d√πng l√†m gi√° tr·ªã c·ªßa "date"
            const selectedDate = urlParams.get("datetime") || urlParams.get("date");
            if (!selectedDate) {
                console.error("Kh√¥ng t√¨m th·∫•y tham s·ªë 'date' ho·∫∑c 'datetime' tr√™n URL.");
                return;
            }
            console.log("üîÑ ƒêang t·∫£i danh s√°ch d·ªØ li·ªáu cho date:", selectedDate);
            const response = await fetch(`api/fetchdata.php?date=${encodeURIComponent(selectedDate)}`);
            if (!response.ok) throw new Error(`L·ªói HTTP: ${response.status}`);
            const result = await response.json();
            let data = [];
            // N·∫øu API tr·∫£ v·ªÅ tr·ª±c ti·∫øp m·∫£ng d·ªØ li·ªáu
            if (Array.isArray(result)) {
                data = result;
            } else if (result.data && Array.isArray(result.data)) {
                // N·∫øu API tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng ch·ª©a thu·ªôc t√≠nh "data"
                data = result.data;
            } else {
                console.error("D·ªØ li·ªáu tr·∫£ v·ªÅ kh√¥ng ph·∫£i l√† m·∫£ng:", result);
                return;
            }
            // C·∫≠p nh·∫≠t th·∫ª select v·ªõi danh s√°ch d·ªØ li·ªáu
            deleteSelect.innerHTML = '<option value="">-- Ch·ªçn m·ª•c ƒë·ªÉ x√≥a --</option>';
            data.forEach(item => {
                const status = item.CHECK_VS == 1 ? "‚úÖ ƒê√É HO√ÄN TH√ÄNH" : "‚ùå CH∆ØA HO√ÄN TH√ÄNH";
                const option = document.createElement("option");
                option.value = item.id;
                option.textContent = `${item.id} - ${item.NAME} - ${item.TYPE} (${status})`;
                deleteSelect.appendChild(option);
            });
            console.log("‚úÖ D·ªØ li·ªáu ƒë√£ t·∫£i:", data);
        } catch (error) {
            console.error("‚ùå L·ªói khi t·∫£i danh s√°ch d·ªØ li·ªáu:", error);
        }
    }

    // K√≠ch ho·∫°t n√∫t x√≥a khi m·ªôt m·ª•c ƒë∆∞·ª£c ch·ªçn
    deleteSelect.addEventListener("change", function () {
        deleteBtn.disabled = !deleteSelect.value;
    });

    // X·ª≠ l√Ω x√≥a m·ª•c ƒë∆∞·ª£c ch·ªçn
    deleteBtn.addEventListener("click", function () {
        if (!deleteSelect.value) return;
        const idToDelete = deleteSelect.value;
        if (!confirm(`‚ö† B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a m·ª•c ID ${idToDelete}?`)) return;
        console.log("üóëÔ∏è ƒêang x√≥a ID:", idToDelete);
        fetch("api/delete.php", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: new URLSearchParams({ id: idToDelete })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("‚úÖ X√≥a th√†nh c√¥ng!");
                loadChecklistData(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch sau khi x√≥a
            } else {
                alert("‚ùå L·ªói: " + data.error);
            }
        })
        .catch(error => {
            console.error("‚ùå L·ªói khi x√≥a:", error);
        });
    });

    // T·∫£i danh s√°ch khi trang load
    loadChecklistData();
});
